// File name: FSEQ.hdl
/**
 * FSEQ gate.
 *
 * Inputs: A, B, C, D, f0, f1, Load;
 * Outputs: E, F, G
 *
 * Inputs used: A, B, C, D, f0, f1
 *
 * Logic Circuit:
 * 
 * 
 */

CHIP FSEQ {
  IN A, B, C, D, f0, f1, load;
  OUT E, F, G;

    PARTS:

    Not(in=load, out=notload);
    Mux(a=load, b=notload, sel=load, out=zero);


    DFF(in=Fin, out=f);
    DFF(in=f, out=ff);
    //Mux(a=ff, b=f, sel=f, out=fout);
    DMux(in=f, sel=ff, a=out, b=fout);

    DFF(in=Gin, out=g);
    DFF(in=g, out=gg);
    And(a=g, b=gg, out=gout);

    Mux(a=fout, b=C, sel=load, out=NextC);
    Mux(a=gout, b=D, sel=load, out=NextD);

    // Import F chips
    FZero(A=A, B=B, C=NextC, D=NextD, F=fzeroF, G=fzeroG);
    FOne(A=A, B=B, C=NextC, D=NextD, F=foneF, G=foneG);
    FTwo(A=A, B=B, C=NextC, D=NextD, F=ftwoF, G=ftwoG);
    FThree(A=A, B=B, C=NextC, D=NextD, E=ethreeE, F=fthreeF, G=fthreeG);
    
    // Choosing the Output F
    Mux(a=foneF, b=fzeroF, sel=f0, out=choiceF1);
    Mux(a=fthreeF, b=ftwoF, sel=f0, out=choiceF2);
    Mux(a=choiceF2, b=choiceF1, sel=f1, out=Fin);
    And(a=Fin, b=Fin, out=F);

    // Choosing the Output G
    Mux(a=foneG, b=fzeroG, sel=f0, out=choiceG1);
    Mux(a=fthreeG, b=ftwoG, sel=f0, out=choiceG2);
    Mux(a=choiceG2, b=choiceG1, sel=f1, out=Gin);
    And(a=Gin, b=Gin, out=G);

    // Choosing the Output E
    Not(in=f0, out=Notf0);
    Not(in=f1, out=Notf1);
    And(a=Notf0, b=Notf1, out=trueE);
    Mux(a=trueE, b=ethreeE, sel=trueE, out=E);
}